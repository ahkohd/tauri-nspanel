window.SIDEBAR_ITEMS = {"macro":[["uses_lifetimes","Generator for `UsesLifetimes` impls that unions the used lifetimes of the selected fields."],["uses_type_params","Generator for `UsesTypeParam` impls that unions the used type parameters of the selected fields."]],"mod":[["ast","Utility types for working with the AST."],["derive","Functions to derive `darling`â€™s traits from well-formed input, without directly depending on `proc_macro`."],["error","The `darling::Error` type, the multiple error `Accumulator`, and their internals."],["usage","Traits and types used for tracking the usage of generic parameters through a proc-macro input."],["util","Utility types for attribute parsing."]],"trait":[["FromAttributes","Create an instance by parsing a list of attributes."],["FromDeriveInput","Creates an instance by parsing an entire proc-macro `derive` input, including the, identity, generics, and visibility of the type."],["FromField","Creates an instance by parsing an individual field and its attributes."],["FromGenericParam","Creates an instance by parsing a specific `syn::GenericParam`. This can be a type param, a lifetime, or a const param."],["FromGenerics","Creates an instance by parsing an entire generics declaration, including the `where` clause."],["FromMeta","Create an instance from an item in an attribute declaration."],["FromTypeParam","Creates an instance by parsing an individual type_param and its attributes."],["FromVariant","Creates an instance from a specified `syn::Variant`."]]};