(function() {
    var type_impls = Object.fromEntries([["objc2",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AnyObject\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1200-1334\">source</a><a href=\"#impl-AnyObject\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.class\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1223-1229\">source</a><h4 class=\"code-header\">pub fn <a href=\"objc2/runtime/struct.AnyObject.html#tymethod.class\" class=\"fn\">class</a>(&amp;self) -&gt; &amp;'static <a class=\"struct\" href=\"objc2/runtime/struct.AnyClass.html\" title=\"struct objc2::runtime::AnyClass\">AnyClass</a></h4></section></summary><div class=\"docblock\"><p>Dynamically find the class of this object.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">Â§</a>Example</h5>\n<p>Check that an instance of <code>NSObject</code> has the precise class <code>NSObject</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>objc2::ClassType;\n<span class=\"kw\">use </span>objc2::runtime::NSObject;\n\n<span class=\"kw\">let </span>obj = NSObject::new();\n<span class=\"macro\">assert_eq!</span>(obj.class(), NSObject::class());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_class\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1258-1271\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2/runtime/struct.AnyObject.html#tymethod.set_class\" class=\"fn\">set_class</a>&lt;'s&gt;(this: &amp;Self, cls: &amp;<a class=\"struct\" href=\"objc2/runtime/struct.AnyClass.html\" title=\"struct objc2::runtime::AnyClass\">AnyClass</a>) -&gt; &amp;'s <a class=\"struct\" href=\"objc2/runtime/struct.AnyClass.html\" title=\"struct objc2::runtime::AnyClass\">AnyClass</a></h4></section></summary><div class=\"docblock\"><p>Change the class of the object at runtime.</p>\n<p>Returns the objectâ€™s previous class.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">Â§</a>Safety</h5>\n<p>The new class must:</p>\n<ol>\n<li>\n<p>Be a subclass of the objectâ€™s current class.</p>\n</li>\n<li>\n<p>The subclass must not add any instance variables - importantly, the\ninstance size of old and the new classes must be the same.</p>\n</li>\n<li>\n<p>Any overridden methods on the new class must be fully compatible\nwith the old ones.</p>\n</li>\n</ol>\n<p>Note that in the general case, where arbitary parts of the program\nmay be trying to modify the class of the object concurrently, these\nrequirements are not actually possible to uphold.</p>\n<p>Since usage of this function is expected to be extremely rare, and\neven more so trying to do it concurrently, it is recommended that you\nverify that the returned class is what you would expect, and if not,\npanic.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_ivar\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1309-1313\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2/runtime/struct.AnyObject.html#tymethod.get_ivar\" class=\"fn\">get_ivar</a>&lt;T: <a class=\"trait\" href=\"objc2/encode/trait.Encode.html\" title=\"trait objc2::encode::Encode\">Encode</a>&gt;(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;T</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated: this is difficult to use correctly, use <code>Ivar::load</code> instead.</span></div></span></summary><div class=\"docblock\"><p>Use <a href=\"objc2/runtime/struct.Ivar.html#method.load\" title=\"method objc2::runtime::Ivar::load\"><code>Ivar::load</code></a> instead.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">Â§</a>Safety</h5>\n<p>The object must have an instance variable with the given name, and it\nmust be of type <code>T</code>.</p>\n<p>See <a href=\"objc2/runtime/struct.Ivar.html#method.load_ptr\" title=\"method objc2::runtime::Ivar::load_ptr\"><code>Ivar::load_ptr</code></a> for details surrounding this.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut_ivar\" class=\"method\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1325-1329\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"objc2/runtime/struct.AnyObject.html#tymethod.get_mut_ivar\" class=\"fn\">get_mut_ivar</a>&lt;T: <a class=\"trait\" href=\"objc2/encode/trait.Encode.html\" title=\"trait objc2::encode::Encode\">Encode</a>&gt;(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.82.0/std/primitive.reference.html\">&amp;mut T</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated: this is difficult to use correctly, use <code>Ivar::load_mut</code> instead.</span></div></span></summary><div class=\"docblock\"><p>Use <a href=\"objc2/runtime/struct.Ivar.html#method.load_mut\" title=\"method objc2::runtime::Ivar::load_mut\"><code>Ivar::load_mut</code></a> instead.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">Â§</a>Safety</h5>\n<p>The object must have an instance variable with the given name, and it\nmust be of type <code>T</code>.</p>\n<p>See <a href=\"objc2/runtime/struct.Ivar.html#method.load_ptr\" title=\"method objc2::runtime::Ivar::load_ptr\"><code>Ivar::load_ptr</code></a> for details surrounding this.</p>\n</div></details></div></details>",0,"objc2::runtime::Object"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-AnyObject\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1336-1340\">source</a><a href=\"#impl-Debug-for-AnyObject\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1337-1339\">source</a><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.82.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.82.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","objc2::runtime::Object"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefEncode-for-AnyObject\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1191-1193\">source</a><a href=\"#impl-RefEncode-for-AnyObject\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/encode/trait.RefEncode.html\" title=\"trait objc2::encode::RefEncode\">RefEncode</a> for <a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.ENCODING_REF\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1192\">source</a><a href=\"#associatedconstant.ENCODING_REF\" class=\"anchor\">Â§</a><h4 class=\"code-header\">const <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\" class=\"constant\">ENCODING_REF</a>: <a class=\"enum\" href=\"objc2/encode/enum.Encoding.html\" title=\"enum objc2::encode::Encoding\">Encoding</a> = Encoding::Object</h4></section></summary><div class='docblock'>The Objective-C type-encoding for a reference of this type. <a href=\"objc2/encode/trait.RefEncode.html#associatedconstant.ENCODING_REF\">Read more</a></div></details></div></details>","RefEncode","objc2::runtime::Object"],["<section id=\"impl-IsAllowedMutable-for-AnyObject\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2/mutability.rs.html#404\">source</a><a href=\"#impl-IsAllowedMutable-for-AnyObject\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/mutability/trait.IsAllowedMutable.html\" title=\"trait objc2::mutability::IsAllowedMutable\">IsAllowedMutable</a> for <a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h3></section>","IsAllowedMutable","objc2::runtime::Object"],["<section id=\"impl-IsIdCloneable-for-AnyObject\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2/mutability.rs.html#309\">source</a><a href=\"#impl-IsIdCloneable-for-AnyObject\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/mutability/trait.IsIdCloneable.html\" title=\"trait objc2::mutability::IsIdCloneable\">IsIdCloneable</a> for <a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h3></section>","IsIdCloneable","objc2::runtime::Object"],["<section id=\"impl-Message-for-AnyObject\" class=\"impl\"><a class=\"src rightside\" href=\"src/objc2/runtime/mod.rs.html#1198\">source</a><a href=\"#impl-Message-for-AnyObject\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"objc2/trait.Message.html\" title=\"trait objc2::Message\">Message</a> for <a class=\"struct\" href=\"objc2/runtime/struct.AnyObject.html\" title=\"struct objc2::runtime::AnyObject\">AnyObject</a></h3></section>","Message","objc2::runtime::Object"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10800]}