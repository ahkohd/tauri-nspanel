searchState.loadedDescShard("ico", 0, "A library for encoding/decoding ICO image files.\nImages with cursor hotspots (CUR files)\nPlain images (ICO files)\nA collection of images; the contents of a single ICO or …\nOne entry in an ICO or CUR file; a single icon or cursor.\nA decoded image.\nThe type of resource stored in an ICO/CUR file.\nAdds an entry to the collection.  Panics if …\nReturns the bits-per-pixel (color depth) of the image.  …\nReturns the coordinates of the cursor hotspot (pixels …\nReturns the coordinates of the cursor hotspot (pixels …\nReturns the raw, encoded image data.\nDecodes this entry into an image.  Returns an error if the …\nEncodes an image in a new entry.  The encoding method is …\nEncodes an image as a BMP in a new entry.  The color depth …\nEncodes an image as a PNG in a new entry.  The color depth …\nReturns the entries in this collection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new image with the given dimensions and RGBA …\nReturns the height of the image, in pixels.\nReturns the height of the image, in pixels.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the image is encoded as a PNG, or false if …\nCreates a new, empty collection of icons/cursors.\nReads an ICO or CUR file into memory.\nDecodes an image from a PNG file.  Returns an error if the …\nReturns the type of resource stored in this collection, …\nReturns the type of resource stored in this entry, either …\nReturns the RGBA data for this image, in row-major order …\nSets or clears the cursor hotspot coordinates.\nReturns the width of the image, in pixels.\nReturns the width of the image, in pixels.\nWrites an ICO or CUR file out to disk.\nEncodes the image as a PNG file.")