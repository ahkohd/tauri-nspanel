searchState.loadedDescShard("wry", 0, "Wry is a Cross-platform WebView rendering library.\nSystem preference\nDark\nAn event describing drag and drop operations on the …\nThe file(s) have been dropped onto the window.\nA drag operation has entered the webview.\nContains the error value\nErrors returned by wry.\nIndicates that the page content has finished loading\nConnect to proxy server via HTTP CONNECT\nThe drag operation has been cancelled or left the window.\nLight\nContains the success value\nA drag operation is moving over the window.\nType of of page loading event\nType alias for a color in the RGBA format.\nA rectangular region.\nResolves a custom protocol <code>Request</code> asynchronously.\nConvenient type alias of Result type for wry.\nConnect to proxy server via SOCKSv5\nIndicates that the content of the page has started loading\nWebView theme.\nA context that is shared between multiple <code>WebView</code>s.\nThe fundamental type to present a <code>WebView</code>.\nBuilder type of <code>WebView</code>.\nAdditional methods on <code>WebView</code> that are specific to macOS.\nAn id for a webview\nWhether clicking an inactive window also clicks through to …\nWhether all media can be played without user interaction.\nIndicates whether horizontal swipe gestures trigger …\nSpecify the webview background color. This will be ignored …\nThe webview bounds. Defaults to …\nConsume the builder and create the <code>WebView</code> from a type …\nConsume the builder and create the <code>WebView</code> as a child …\nClear all browsing data\nEnables clipboard access for the page rendered on <strong>Linux</strong> …\nClose the web inspector which is usually called dev tool.\nWeb context to be shared with this webview.\nA list of custom loading protocols with pairs of scheme …\nA reference to the data directory the context was created …\nEnable web inspector which is usually called browser …\nSet a handler closure to process the change of the webview…\nA download completion handler to manage downloads that …\nA download started handler to manage incoming downloads.\nA handler closure to process incoming <code>DragDropEvent</code> of the …\nEvaluate and run javascript code.\nEvaluate and run javascript code with callback function. …\nTry moving focus to the webview.\nTry moving focus away from the webview back to the parent …\nWhether the webview should be focused when created.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeaders used when loading the requested <code>url</code>.\nProxy server host (e.g. 192.168.0.100, localhost, …\nWhether load the provided html string to <code>WebView</code>. This …\nReturns the id of this webview.\nAn id that will be passed when this webview makes requests …\nRun the WebView with incognito mode. Note that WebContext …\nInitialize javascript code when loading new pages. When …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe IPC handler to receive the message from Javascript on …\nCheck if a custom protocol has been registered on this …\nGets the devtool window’s current visibility state.\nLoad html content into the webview\nNavigate to the specified url\nNavigate to the specified url using the specified headers\nReturns WKWebView manager (userContentController) handle\nA navigation handler to decide if incoming url is allowed …\nCreate a new <code>WebViewBuilder</code>.\nCreate a <code>WebView</code> from from a type that implements …\nCreate a new <code>WebContext</code>.\nCreate <code>WebViewBuilder</code> as a child window inside the …\nA new window handler to decide if incoming url is allowed …\nReturns NSWindow associated with the WKWebView webview\nSet a handler closure to process page load events.\nOpen the web inspector which is usually called dev tool.\nProxy server port (e.g. 1080, 3128, etc.)\nRect position.\nLaunch print modal for the webview content.\nSet a proxy configuration for the webview. Supports HTTP …\nRe-exported raw-window-handle crate.\nAttaches this webview to the given NSWindow and removes it …\nResolves the request with the given response.\nSet if this context allows automation.\nSpecify the webview background color.\nSet the webview bounds.\nShows or hides the webview.\nRect size.\nWhether the WebView should be transparent.\nGet the current url of the webview\nWhether load the provided URL to <code>WebView</code>.\nWhether the WebView should have a custom user-agent.\nWhether the WebView window should be visible.\nReturns WKWebView handle\nGet WebView/Webkit version on current platform.\nSets whether clicking an inactive window also clicks …\nSame as <code>Self::with_custom_protocol</code> but with an …\nCreate a new <code>WebViewBuilder</code> with the given …\nSets whether all media can be played without user …\nIndicates whether horizontal swipe gestures trigger …\nSpecify the webview background color. This will be ignored …\nSpecify the webview position relative to its parent if it …\nEnables clipboard access for the page rendered on <strong>Linux</strong> …\nRegister custom loading protocols with pairs of scheme uri …\nInitialize the WebView with a custom data store identifier.\nEnable or disable web inspector which is usually called …\nSet a handler closure to process the change of the webview…\nSets a download completion handler to manage downloads …\nSet a download started handler to manage incoming …\nSet a handler closure to process incoming <code>DragDropEvent</code> of …\nSet whether the webview should be focused when created.\nSet headers used when loading the requested <code>url</code>.\nWhether page zooming by hotkeys or gestures is enabled\nLoad the provided HTML string when the builder calling …\nSet an id that will be passed when this webview makes …\nRun the WebView with incognito mode. Note that WebContext …\nInitialize javascript code when loading new pages. When …\nSet the IPC handler to receive the message from Javascript …\nSet a navigation handler to decide if incoming url is …\nSet a new window request handler to decide if incoming url …\nSet a handler to process page loading events.\nSet a proxy configuration for the webview.\nSets whether the WebView should be transparent.\nLoad the provided URL when the builder calling …\nLoad the provided URL with given headers when the builder …\nSet a custom user-agent for the WebView.\nSets whether the WebView should be visible or not.\nCreate a new <code>WebViewBuilder</code> with a web context that can be …\nSet the webview zoom level\nWhether page zooming by hotkeys is enabled\nList of paths that are being dragged onto the webview.\nList of paths that are being dropped onto the window.\nPosition of the drag operation, relative to the webview …\nPosition of the drag operation, relative to the webview …\nPosition of the drag operation, relative to the webview …")