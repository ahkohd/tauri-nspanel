searchState.loadedDescShard("objc", 0, "Objective-C Runtime bindings and wrapper for Rust.\nTypes that have an Objective-C type encoding.\nTypes that represent a group of arguments, where each has …\nAn Objective-C type encoding.\nThe type as which the encodings for Self will be returned.\nTypes that may be sent Objective-C messages. For example: …\nTypes that may be used as the arguments of an Objective-C …\nAn error encountered while attempting to send a message.\nReturns self as a <code>str</code>.\nGets a reference to a <code>Class</code>.\nFunctionality for declaring Objective-C classes.\nReturns the Objective-C type encoding for Self.\nReturns the Objective-C type encodings for Self.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an <code>Encoding</code> from its string representation. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvoke an <code>Imp</code> with the given object, selector, and …\nSends a message to an object.\nUtilities for reference counting Objective-C objects.\nA Rust interface for the functionality of the Objective-C …\nRegisters a selector, returning a <code>Sel</code>.\nSends a message to self with the given selector and …\nSends a message to self with the given selector and …\nVerifies that the argument and return types match the …\nVerifies that the argument and return types match the …\nThe argument types of the method.\nThe callee type of the method.\nA type for declaring a new class and adding new methods …\nTypes that can be used as the implementation of an …\nA type for declaring a new protocol and adding new methods …\nThe return type of the method.\nAdds a class method with the given name and implementation …\nAdds a class method declaration with a given description …\nAdds an ivar with type <code>T</code> and the provided name to self. …\nAdds a method with the given name and implementation to …\nAdds an instance method declaration with a given …\nAdds a protocol to self. Panics if the protocol wasn’t …\nAdds a requirement on another protocol.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns self as an <code>Imp</code> of a method.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a <code>ClassDecl</code> with the given name and superclass. …\nConstructs a <code>ProtocolDecl</code> with the given name. Returns <code>None</code>…\nRegisters self, consuming it and returning a reference to …\nRegisters self, consuming it and returning a reference to …\nConstructs a <code>ClassDecl</code> declaring a new root class with the …\nA pointer that strongly references an object, ensuring it …\nA pointer that weakly references an object, allowing to …\nAutoreleases self, meaning that the object is not …\nExecute <code>f</code> in the context of a new autorelease pool. The …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads the object self points to, returning a <code>StrongPtr</code>. If …\nConstructs a <code>StrongPtr</code> to a newly created object that …\nConstructs a <code>WeakPtr</code> to the given object. Unsafe because …\nRetains the given object and constructs a <code>StrongPtr</code> to it. …\nReturns a <code>WeakPtr</code> to self.\nA type that represents an Objective-C class.\nA pointer to the start of a method implementation.\nA type that represents an instance variable.\nA type that represents a method in a class definition.\nA type that represents an instance of a class.\nA type that represents an Objective-C protocol.\nA type that represents a method selector.\nGet a list of the protocols to which this class conforms.\nGet a list of the protocols to which this protocol …\nReturns the <code>Encoding</code> of a single parameter type of self, or\nReturns the number of arguments accepted by self.\nReturns a pointer to the raw selector.\nReturns the class of self.\nObtains the list of registered class definitions.\nReturns the total number of registered classes.\nChecks whether this class conforms to the specified …\nChecks whether this protocol conforms to the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWraps a raw pointer to a selector into a <code>Sel</code> object.\nReturns the class definition of a specified class, or <code>None</code> …\nReturns the protocol definition of a specified protocol, …\nReturns a reference to the ivar of self with the given …\nReturns a mutable reference to the ivar of self with the …\nReturns the implementation of self.\nReturns a specified instance method for self, or <code>None</code> if …\nDescribes the instance methods implemented by self.\nReturns the size of instances of self.\nReturns the ivar for a specified instance variable of …\nDescribes the instance variables declared by self.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the metaclass of self.\nReturns the name of the method specified by self.\nReturns the name of self.\nReturns the name of self.\nReturns the name of self.\nReturns the name of self.\nReturns the offset of self.\nObtains the list of registered protocol definitions.\nRegisters a method with the Objective-C runtime system, …\nReturns the <code>Encoding</code> of self’s return type.\nSets the value of the ivar of self with the given name. …\nReturns the superclass of self, or <code>None</code> if self is a root …\nReturns the <code>Encoding</code> of self.")