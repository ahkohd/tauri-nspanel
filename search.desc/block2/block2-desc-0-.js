searchState.loadedDescShard("block2", 0, "Apple’s C language extension of blocks\nThe parameters/arguments to the block.\nAn opaque type that holds an Objective-C block.\nTypes that represent closure parameters/arguments and …\nDeprecated alias for a <code>&#39;static</code> <code>StackBlock</code>.\nThe type-erased <code>dyn Fn(...Args) -&gt; R + &#39;f</code>.\nA global Objective-C block that does not capture an …\nTypes that may be converted into a block.\nThe return type of the block.\nA reference-counted Objective-C block that is stored on …\nAn Objective-C block constructed on the stack.\nCall the block.\nIncrease the reference-count of the block.\nCopy the block onto the heap as an <code>RcBlock</code>.\nConstruct an <code>RcBlock</code> from the given block pointer.\nRelease the block, decreasing the reference-count by 1.\nRaw bindings to <code>Block.h</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct an <code>RcBlock</code> from the given block pointer by taking\nConstruct a static <code>GlobalBlock</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a <code>RcBlock</code> with the given closure.\nConstruct a <code>StackBlock</code> with the given closure.\nType for block class ISAs.\nCopy/retain a block.\nCopy a block field or <code>__block</code> variable from one location …\nDispose an object previously copied using …\nRelease a block.\nClass ISA used for global blocks.\nClass ISA used for stack blocks.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")