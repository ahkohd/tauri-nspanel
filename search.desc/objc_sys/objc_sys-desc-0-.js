searchState.loadedDescShard("objc_sys", 0, "Raw bindings to Objective-C runtimes\nThe Objective-C <code>BOOL</code> type.\nA nullable pointer to the start of a method implementation.\nThe equivalent of <code>false</code> for Objective-C’s <code>BOOL</code> type.\nA signed integer value type.\nThe maximum value for a <code>NSInteger</code>.\nThe minimum value for a <code>NSInteger</code>.\nDescribes an unsigned integer.\nThe maximum value for a <code>NSUInteger</code>.\nA quick alias for a <code>null_mut</code> class.\nNo value.\nSpecifies a weak reference to the associated object.\nSpecifies that the associated object is copied.\nSpecifies that the associated object is copied.\nSpecifies a strong reference to the associated object.\nSpecifies a strong reference to the associated object.\nOnly relevant before macOS 10.13\nOnly relevant before macOS 10.13\nAn immutable pointer to a selector.\nSome value of type <code>T</code>.\nThe equivalent of <code>true</code> for Objective-C’s <code>BOOL</code> type.\nThe return value is deallocated with <code>free</code>.\nThe returned array is deallocated with <code>free</code>.\nThe returned array is deallocated with <code>free</code>.\nThe returned array is deallocated with <code>free</code>.\nThe Objective-C runtime has several methods, usually with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA mutable pointer to an object / instance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe return value is deallocated with <code>free</code>.\nThe return value is deallocated with <code>free</code>.\nThe name of the method.\nThe name of the attribute.\nA quick alias for a <code>null_mut</code> object / instance.\nPolicies related to associative references.\nAn opaque type that represents an Objective-C class.\nThe returned array is deallocated with <code>free</code>.\nThe returned array is deallocated with <code>free</code>.\nThe returned array is deallocated with <code>free</code>.\nRemember that this is non-null!\nRemember that this is non-null!\nRemember that this is non-null!\nSee <code>objc-exception.h</code>.\nAn opaque type that represents an instance variable.\nA type that represents a method in a class definition.\nDescribes an Objective-C method.\nAn opaque type that represents an object / an instance of …\nAn opaque type that describes a property in a class.\nDescribes an Objective-C property attribute.\nOpaque type for Objective-C protocols.\nAn opaque type that represents a method selector.\nSpecifies data used when sending messages to superclasses.\nRemember that this is non-null!\nThe returned array is deallocated with <code>free</code>.\nThe returned array is deallocated with <code>free</code>.\nThe returned array is deallocated with <code>free</code>.\nThe returned array is deallocated with <code>free</code>.\nThe object / instance to send a message to.\nThe particular superclass of the instance to message.\nCall the given function inside an Objective-C <code>@try/@catch</code> …\nThe types of the method arguments.\nThe value of the attribute")