searchState.loadedDescShard("tauri_runtime_wry", 0, "Corresponds to <code>NSApplicationActivationPolicyAccessory</code>.\nCorresponds to <code>NSApplicationActivationPolicyProhibited</code>.\nCorresponds to <code>NSApplicationActivationPolicyRegular</code>.\nCorresponds to <code>NSApplicationActivationPolicy</code>.\nWrapper around a <code>tao::window::Icon</code> that can be created …\nObject that allows you to build windows.\nIdentifier of a window. Unique for each window.\nRepresents a window.\nAdditional methods on <code>Window</code> that are specific to MacOS.\nA Tauri <code>Runtime</code> wrapper around wry.\nA handle to the Wry runtime.\nThe Tauri <code>WebviewDispatch</code> for <code>Wry</code>.\nThe Tauri <code>WindowDispatch</code> for <code>Wry</code>.\nReturns whether the system can automatically organize …\nReturns the list of all the monitors available on the …\nBuilds the window.\nCreates a new tao window using a callback, and returns its …\nReturns the monitor on which the window currently resides.\nReturns the current cursor position\nResizes the window with the left mouse button until the …\nMoves the window with the left mouse button until the …\nSafety\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the window’s current fullscreen state.\nReturns whether or not the window has shadow.\nReturns an identifier unique to the window.\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the window’s client area.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates whether the window is always on top of other …\nGets the current native window’s close button state\nGets the window’s current closable state.\nGets the window’s current decoration state.\nGets the window’s current decoration state.\nGets the devtools window’s current open state.\nGet the window’s edit state\nIs window active and focused?\nGets the current native window’s maximize button state\nGets the window’s current maximizable state.\nGets the window’s current maximized state.\nGets the current native window’s minimize button state\nGets the window’s current minimizable state.\nGets the window’s current minimized state.\nGets the window’s current resizable state.\nGets the window’s current resizable state.\nGets the window’s current visibility state.\nReturns the monitor that contains the given point.\nCreates a new Window for platforms where this is …\nInitializes a new <code>WindowBuilder</code> with default values.\nReturns a pointer to the cocoa <code>NSView</code> that is used by this …\nReturns a pointer to the cocoa <code>NSWindow</code> that is used by …\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the entire window.\nReturns the primary monitor of the system.\nEmits a <code>WindowEvent::RedrawRequested</code> event in the …\nRequests user attention to the window, this has no effect …\nReturns the scale factor that can be used to map logical …\nSend a message to the event loop.\nUsed to prevent the application from automatically …\nSets the activation policy for the application. It is set …\nSets whether the system can automatically organize windows …\nChange whether or not the window will always be below …\nChange whether or not the window will always be on top of …\nSets whether the window is closable or not.\nPrevents the window contents from being captured by other …\nGrabs the cursor, preventing it from leaving the window.\nModifies the cursor icon of the window.\nChanges the position of the cursor in window coordinates.\nModifies the cursor’s visibility.\nTurn window decorations on or off.\nBring the window to front and focus.\nSets the window to fullscreen or back.\nThe content view consumes the full size of the window.\nSets whether or not the window has shadow.\nModifies whether the window catches cursor events.\nSets location of IME candidate box in client area …\nModifies the inner size of the window.\nSets inner size constraints for the window.\nPut the window in a state which indicates a file save is …\nSets a maximum dimension size for the window.\nSets whether the window is maximizable or not.\nSets the window to maximized or back.\nSets a minimum dimension size for the window.\nSets whether the window is minimizable or not.\nSets the window to minimized or back\nModifies the position of the window.\nSets the taskbar progress state.\nSets whether the window is resizable or not.\nToggles a fullscreen mode that doesn’t require a new …\nGroup windows together by using the same tabbing …\nSets the theme for this window.\nModifies the title of the window.\nA Boolean value that indicates whether the title bar draws …\nSet the window traffic light position relative to the …\nModifies the window’s visibility.\nSets whether the window should be visible on all …\nSets the window icon. On Windows and Linux, this is …\nReturns whether or not the window is in simple fullscreen …\nReturns the window’s tabbing identifier.\nReturns the current window theme.\nGets the current title of the window.\nGet WebView/Webkit version on current platform.\nThe attributes to use to create the window.\nGets the [<code>WebviewId&#39;] associated with the given [</code>WindowId`]…\nSets whether or not the window will always be below other …\nSets whether or not the window will always be on top of …\nSets whether the window is closable or not.\nPrevents the window contents from being captured by other …\nSets whether the window should have a border, a title bar, …\nWhether the window will be initially focused or not.\nSets the window fullscreen state.\nRequests the window to be of specific dimensions.\nSets inner size constraints for the window.\nSets a maximum dimension size for the window.\nSets whether the window is maximizable or not.\nRequests maximized mode.\nSets a minimum dimension size for the window.\nSets whether the window is minimizable or not.\nSets a desired initial position for the window.\nSets whether the window is resizable or not.\nForces a theme or uses the system settings if <code>None</code> was …\nRequests a specific title for the window.\nSets whether the background of the window should be …\nSets whether the window will be initially hidden or …\nSets whether the window should be visible on all …\nSets the window icon.")