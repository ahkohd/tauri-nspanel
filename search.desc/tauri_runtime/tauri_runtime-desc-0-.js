searchState.loadedDescShard("tauri_runtime", 0, "Corresponds to NSApplicationActivationPolicyAccessory.\nApplication’s activation policy. Corresponds to …\nAlways filter out device events.\nFailed to create webview.\nFailed to create window.\nPlatform-specific\nContains the error value\nError state. <strong>Treated as Normal on Linux</strong>\nThe proxy type.\nEvent loop is exiting.\nEvent loop is about to exit\nAction to take when the event loop is about to exit\nFailed to get cursor position.\nFailed to get monitor on window operation.\nFailed to receive message from webview.\nFailed to send message to webview.\nThe runtime handle type.\nWindow icon.\nIndeterminate state. <strong>Treated as Normal on Linux and macOS</strong>\nPlatform-specific\nFailed to load window icon.\nThe given window label is invalid.\nFailed to serialize/deserialize.\nEmitted when all of the event loop’s input events have …\nReport all device events regardless of window focus.\nHide progress bar.\nNormal state.\nContains the success value\nEmitted when the user wants to open the specified resource …\nPaused state. <strong>Treated as Normal on Linux</strong>\nPrevent the event loop from exiting\nProgress Bar State\nProgress bar status.\nCorresponds to NSApplicationActivationPolicyProhibited.\nApplication ready.\nA rectangular region.\nCorresponds to NSApplicationActivationPolicyRegular.\nEmitted when the NSApplicationDelegate’s …\nDefines the orientation that a window resize will be …\nResult type.\nSent if the event loop is being resumed.\nEvent triggered on the event loop run.\nThe webview runtime interface.\nThe runtime this <code>WebviewDispatch</code> runs under.\nThe runtime this <code>WindowDispatch</code> runs under.\nA <code>Send</code> handle to the runtime.\nFilter out device events while the window is not focused.\nType of user attention requested on a window.\nA type that can be used as an user event.\nA custom event defined by the user.\nWebview dispatcher. A thread-safe handle to the webview …\nThe webview message dispatcher.\nAn event associated with a webview.\nThe window builder type.\nWindow dispatcher. A thread-safe handle to the window APIs.\nThe window message dispatcher.\nAn event associated with a window.\nReturns the list of all the monitors available on the …\nReturns the webview’s bounds.\nCenters the window.\nClear all browsing data for this webview.\nCloses the webview.\nCloses the window.\nClose the web inspector which is usually called devtools.\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nCreate a new webview.\nCreate a new webview.\nCreate a new webview.\nCreate a new window.\nCreate a new window.\nCreate a new window.\nReturns the monitor on which the window currently resides.\nThe <code>.desktop</code> filename with the Unity desktop window …\nDestroys the window.\nUI scaling utilities.\nExecutes javascript on the window this <code>WindowDispatch</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a runtime handle.\nIcon height.\nHides the application.\nHides the application.\nHide the webview\nHides the window.\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the window’s client area.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the window’s native close button state.\nGets the window’s current decoration state.\nGets the devtools window’s current open state.\nWhether the window is enabled or disable.\nGets the window’s current focus state.\nGets the window’s current fullscreen state.\nGets the window’s native maximize button state.\nGets the window’s current maximized state.\nGets the window’s native minimize button state.\nGets the window’s current minimized state.\nGets the window’s current resizable state.\nGets the window’s current visibility state.\nMaximizes the window.\nMinimizes the window.\nTypes useful for interacting with a user’s monitors.\nReturns the monitor that contains the given point.\nNavigate to the given URL.\nCreates a new webview runtime. Must be used on the main …\nRegisters a webview event handler.\nRegisters a window event handler.\nOpen the web inspector which is usually called devtools.\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the entire window.\nReturns the position of the top-left hand corner of the …\nRect position.\nReturns the primary monitor of the system.\nOpens the dialog to prints the contents of the webview.\nThe progress bar progress. This can be a value ranging …\nMoves the webview to the given window.\nRequests an exit of the event loop.\nRequests user attention to the window.\nRGBA bytes of the icon.\nRun the webview runtime.\nRuns an iteration of the runtime event loop and returns …\nRun a task on the main thread.\nRun a task on the main thread.\nRun a task on the main thread.\nReturns the scale factor that can be used to map logical …\nSets the activation policy for the application.\nSets the activation policy for the application.\nUpdates the window alwaysOnBottom flag.\nUpdates the window alwaysOnTop flag.\nSets whether the webview should automatically grow and …\nSets the webview’s bounds.\nUpdates the window’s native close button state.\nPrevents the window contents from being captured by other …\nGrabs the cursor, preventing it from leaving the window.\nChanges the position of the cursor in window coordinates.\nModifies the cursor’s visibility.\nUpdates the decorations flag.\nChange the device event filter mode.\nEnable or disable the window.\nBring the window to front and focus the webview.\nBring the window to front and focus.\nUpdates the window fullscreen state.\nUpdates the window icon.\nIgnores the window cursor events.\nUpdates the window max inner size.\nUpdates the window’s native maximize button state.\nUpdates the window min inner size.\nUpdates the window’s native minimize button state.\nUpdates the webview position.\nUpdates the window position.\nSets the taskbar progress state.\nUpdates the window resizable flag.\nUpdates the shadow flag.\nResizes the webview.\nResizes the window.\nSets this window’s minimum inner width.\nWhether to hide the window icon from the taskbar or not.\nSets the theme for this window.\nUpdates the window title.\nSets the title bar style. Available on macOS only.\nUpdates the window visibleOnAllWorkspaces flag.\nSet the webview zoom level\nShows the application, but does not automatically focus it.\nShows the application, but does not automatically focus it.\nShow the webview\nShows the window.\nReturns the physical size of the webviews’s client area.\nRect size.\nStarts dragging the window.\nStarts resize-dragging the window.\nThe progress bar status.\nReturns the current window theme.\nGets the window’s current title.\nUnmaximizes the window.\nUnminimizes the window.\nReturns the webview’s current URL.\nA layer between raw <code>Runtime</code> webviews and Tauri.\nIcon width.\nA layer between raw <code>Runtime</code> windows and Tauri.\nRaw window handle.\nRuns a closure with the platform webview object as …\nThe exit code.\nThe detailed event.\nThe detailed event.\nIndicates whether the NSApplication object found any …\nThe window label.\nThe webview label.\nMonitor descriptor.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA human-readable name of the monitor. <code>None</code> if the monitor …\nThe top-left corner position of the monitor relative to …\nReturns the scale factor that can be used to map logical …\nThe monitor’s resolution.\nA webview that is not yet managed by Tauri.\nDownload event.\nDownload finished.\nPage finished loading.\nKind of event for the page load handler.\nA webview that has yet to be built.\nDownload requested.\nPage started to load.\nThe attributes used to create an webview.\nIPC handler.\nSets whether clicking an inactive window also clicks …\nSets additional browser arguments. <strong>Windows Only</strong>\nSets the webview to automatically grow and shrink its size …\nWhether browser extensions can be installed for the …\nData directory for the webview.\nDisables the drag and drop handler. This is required to …\nThe <code>crate::WebviewDispatch</code> associated with the window.\nEnables clipboard access for the page rendered on <strong>Linux</strong> …\nOnly use the <code>DetachedWebview</code>’s label to compare equality.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOnly use the <code>DetachedWebview</code>’s label to represent its …\nEnable or disable incognito mode for the WebView.\nSets the init script.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHow to handle IPC calls on the webview.\nThe label that the webview will be named.\nName of the window\nA handler to decide if incoming url is allowed to navigate.\nCreate a new <code>PendingWebview</code> with a label from the given …\nInitializes the default attributes for a webview.\nEnable proxy for the WebView\nThe resolved URL to load on the webview.\nSets the user agent\nThe <code>WebviewAttributes</code> that the webview will be created …\nSets window effects\nWhether page zooming by hotkeys is enabled\nRepresents where the file will be downloaded to. Can be …\nPotentially representing the filesystem path the file was …\nIndicates if the download succeeded or not.\nThe url being downloaded.\nThe URL of the original download request.\nSelf explanatory.\nThe window has been requested to close.\nA simple crosshair.\nDescribes the appearance of the mouse cursor.\nThe platform-dependent default cursor.\nThe window has been destroyed.\nA window that is not yet managed by Tauri.\nAn event associated with the drag and drop action.\nAn event associated with the drag and drop action.\nThe drag drop event payload.\nThe file(s) have been dropped onto the webview.\nIndicate that some edge is to be moved. For example, the …\nA drag operation has entered the webview.\nThe window gained or lost focus.\nIndicates something can be grabbed.\nIndicates something is grabbed.\nA hand (often used to indicate links in web browsers).\nHelp indicator (often rendered as a “?”)\nThe drag operation has been cancelled or left the window.\nIndicates something is to be moved.\nThe position of the window has changed. Contains the window…\nCursor showing that something cannot be done.\nA drag operation is moving over the webview.\nA window that has yet to be built.\nProgress indicator. Shows that processing is being done. …\nA raw window type that contains fields to access the HWND …\nThe size of the window has changed. Contains the client …\nThe window’s scale factor has changed.\nIndicates text that may be selected or edited.\nThe system window theme has changed.\nProgram busy indicator.\nAn event from a window.\nA builder for all attributes related to a single window.\nDo <strong>NOT</strong> implement this trait except for use in a custom …\nAn event from a window.\nIdentifier of a window.\nWindow size constraints\nWhether the window should always be below other windows.\nWhether the window should always be on top of other …\nShow window in the center of the screen.\nWhether the window’s native close button is enabled or …\nPrevents the window contents from being captured by other …\nWhether the window should have borders and bars.\nThe <code>WindowDispatch</code> associated with the window.\nOnly use the <code>DetachedWindow</code>’s label to compare equality.\nWhether the window will be initially focused or not.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether to start the window in fullscreen or not.\nWhether the icon was set or not.\nOnly use the <code>DetachedWindow</code>’s label to represent its …\nHide the window title.\nSets the window icon.\nThe identifier of the window.\nWindow size.\nWindow inner size constraints.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe label that the window will be named.\nName of the window\nThe maximum height a window can be, If this is <code>None</code>, the …\nWindow max inner size.\nThe maximum width a window can be, If this is <code>None</code>, the …\nWhether the window’s native maximize button is enabled …\nWhether the window should be maximized upon creation.\nThe minimum height a window can be, If this is <code>None</code>, the …\nWindow min inner size.\nThe minimum width a window can be, If this is <code>None</code>, the …\nWhether the window’s native minimize button is enabled …\nInitializes a new window attributes builder.\nCreate a new <code>PendingWindow</code> with a label from the given …\nSets a parent to the window to be created.\nThe initial position of the window’s.\nWhether the window is resizable or not. When resizable is …\nSets a webview to be created on the window.\nSets whether or not the window has shadow.\nSets whether or not the window icon should be added to the …\nDefines the window tabbing identifier for macOS.\nForces a theme or uses the system settings if None was …\nThe title of the window in the title bar.\nHide the titlebar. Titlebar buttons will still be visible.\nWhether the window should be immediately visible upon …\nWhether the window should be visible on all workspaces or …\nThe webview that gets added to the window. Optional in …\nThe webview dispatcher in case this window has an attached …\nThe <code>WindowBuilder</code> that the window will be created with.\nInitializes a new window builder from a <code>WindowConfig</code>\nList of paths that are being dragged onto the webview.\nList of paths that are being dropped onto the window.\nThe position of the mouse cursor.\nThe position of the mouse cursor.\nThe position of the mouse cursor.\nThe window inner size.\nThe new scale factor.\nA signal sender. If a <code>true</code> value is emitted, the window won…")