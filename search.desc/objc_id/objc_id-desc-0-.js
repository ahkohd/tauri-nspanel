searchState.loadedDescShard("objc_id", 0, "Rust smart pointers for Objective-C reference counting.\nA pointer type for Objective-C’s reference counted …\nA type used to mark that a struct owns the object(s) it …\nA type that marks what type of ownership a struct has over …\nA convenient alias for a shared <code>Id</code>.\nA type used to mark that the object(s) a struct contains …\nA pointer type for a weak reference to an Objective-C …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs an <code>Id</code> from a pointer to an unretained object and\nConstructs an <code>Id</code> from a pointer to a retained object; this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a <code>ShareId</code> from the <code>WeakId</code> if the object still exists. …\nConstruct a new <code>WeakId</code> referencing the given <code>ShareId</code>.\n“Downgrade” an owned <code>Id</code> to a <code>ShareId</code>, allowing it to …")