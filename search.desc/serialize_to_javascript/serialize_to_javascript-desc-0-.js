searchState.loadedDescShard("serialize_to_javascript", 0, "Serialize <code>serde::Serialize</code> values to JavaScript using …\nA <code>Template</code> with an attached default template.\nContains the error value\nThis type represents all possible errors that can occur …\nContains the success value\nOptional settings to pass to the templating system.\nThe raw static string with the templates contents.\nReference to a range of bytes encompassing a single valid …\nAlias for a <code>Result</code> with the error type <code>serde_json::Error</code>.\nSerialized JavaScript output.\nA struct that contains <code>serde::Serialize</code> data to insert …\nAutomatically derive <code>Template</code> from a struct with valid …\n<em>Extra</em> amount of bytes to allocate to the String buffer …\nCategorizes the cause of this error.\nOne-based column number at which the error was detected.\nAutomatically derive <code>DefaultTemplate</code> for a <code>Template</code> from …\nIf the parsed JSON will be frozen with <code>Object.freeze()</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert an owned <code>String</code> of JSON data to an owned <code>RawValue</code>.\nAccess the JSON text underlying a raw value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the inner <code>String</code> out.\nThe kind reported by the underlying standard library I/O …\nReturns true if this error was caused by input data that …\nReturns true if this error was caused by prematurely …\nReturns true if this error was caused by a failure to read …\nReturns true if this error was caused by input that was not\nOne-based line number at which the error was detected.\nCreate a new <code>Serialized</code> from the inputs.\nRender the serialized template data into the passed …\nRender the serialized template data into the default …")