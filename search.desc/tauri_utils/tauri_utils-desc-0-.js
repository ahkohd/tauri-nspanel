searchState.loadedDescShard("tauri_utils", 0, "<strong>Windows 10/11 Only</strong>\nMake window effect state always active\nA default material appropriate for the view’s …\nTarget triple architecture error\n<strong>Windows 7/10/11(22H1) Only</strong>\nGet child process error\n<strong>macOS 10.14+</strong>\n<strong>macOS 10.14-</strong>\nDark theme.\nInformation about environment variables.\nTarget triple environment error\nContains the error value\nThe error type of <code>tauri-utils</code>.\nMake window effect state follow the window’s active state\n<strong>macOS 10.14+</strong>\nFailed to use glob pattern.\nGlob pattern did not find any results.\nInvalid glob pattern.\n<strong>macOS 10.14+</strong>\n<strong>macOS 10.14+</strong>\nMake window effect state always inactive\nInvalid pattern.\nIO error\n<strong>macOS 10.14-</strong>\nLight theme.\n<strong>macOS 10.14-</strong>\n<strong>macOS 10.11+</strong>\nMica effect that matches the system dark perefence <strong>Windows </strong>…\nMica effect with dark mode but only if dark mode is …\nMica effect with light mode <strong>Windows 11 Only</strong>\nNot allowed to walk dir.\nContains the success value\nTarget triple OS error\nShows the title bar as a transparent overlay over the …\n<code>tauri::App</code> package information.\nGet parent process PID error\nGet parent process error\n<strong>macOS 10.11+</strong>\nResourece path doesn’t exist\nThe result type of <code>tauri-utils</code>.\n<strong>macOS 10.10+</strong>\n<strong>macOS 10.14+</strong>\n<strong>macOS 10.11+</strong>\nTabbed effect that matches the system dark perefence …\nTabbed effect with dark mode but only if dark mode is …\nTabbed effect with light mode <strong>Windows 11 Only</strong>\nSystem theme.\nHow the window title bar should be displayed on macOS.\n<strong>macOS 10.10+</strong>\n<strong>macOS 10.14+</strong>\nMakes the title bar transparent, so the window background …\n<strong>macOS 10.14-</strong>\n<strong>macOS 10.14+</strong>\n<strong>macOS 10.14+</strong>\nTried to get resource on an unsupported platform\nA normal title bar.\nError walking directory.\n<strong>macOS 10.14+</strong>\nPlatform-specific window effects\nWindow effect state <strong>macOS only</strong>\nAccess Control List types.\nThe command line arguments of the current process.\nThe Assets module allows you to read files that have been …\nThe crate authors.\nThe Tauri configuration used at runtime.\nThe crate name.\nThe crate description.\nReconstructs a path from its components using the platform …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe module to process HTML in Tauri.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIO helpers.\nDetermine a mime type from a URI or file contents.\nApp name\nApplication pattern.\nPlatform helper functions.\nCompile-time and runtime types for Tauri plugins.\nPrepare application resources and sidecars.\nApp version\nWrite the file only if the content of the existing file …\nKnown acl manifests file\nKnown ACL key for the app permissions.\nCould not find an environmental variable that is set …\nKnown capabilityies file\nCapability with the given identifier already exists.\nAllowed and denied commands inside a permission.\nIO error while creating a dir\nIO error while creating a file\nPossible errors while processing ACL files.\nExecution context of an IPC call.\nInvalid glob\nInvalid JSON encountered\nThe links field in the manifest <strong>MUST</strong> be set and match the …\nThe links field in the manifest <strong>MUST</strong> match the name of the …\nA local URL is used (the Tauri app URL).\nKnown foldername of the permission schema files\nKnown filename of the permission schema JSON file\nDescriptions of explicit privileges of commands.\nA set of direct permissions grouped together under a new …\nIO error while reading a file\nRemote URL is trying to use the IPC.\nUrlPattern for <code>ExecutionContext::Remote</code>.\nAn argument for fine grained behavior control of Tauri …\nPermission referenced in set not found.\nInvalid TOML encountered\nInvalid capabilities file format\nUnknown ACL manifest.\nUnknown permission.\nInvalid permissions file format\nIO error while writing a file\nAllowed command.\nData that defines what is allowed by the scope.\nEnd-user abstraction for selecting permissions a window …\nAllowed or denied commands when using this permission.\nDenied command, which takes priority.\nData that defines what is denied by the scope. This should …\nHuman-readable description of what the permission does. …\nHuman-readable description of what the permission does.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdentifier for plugins.\nA unique identifier for the permission.\nA unique identifier for the permission.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this permission should be active based on the …\nPlugin ACL types.\nAll permissions this set contains.\nTarget platforms this permission applies. By default all …\nResolved ACL for runtime usage.\nAllowed or denied scoped when using this permission.\nTest if a given URL matches the pattern.\nA <code>Value</code> that is used instead of <code>toml::Value</code> or …\nThe version of the permission.\nAvailable manifest keys.\nCapability identifier.\nManifest key.\nManifest key.\nPermission identifier.\nPermission identifier.\nSet identifier.\nThe URL trying to access the IPC (URL pattern).\nA grouping and boundary mechanism developers can use to …\nA single capability.\nCapability formats accepted in a capability file.\nConfiguration for remote URLs that are associated with the …\nReference a permission or permission set by identifier and …\nA list of capabilities.\nA list of capabilities.\nAn entry for a permission value in a <code>Capability</code> can be …\nReference a permission or permission set by identifier.\nDescription of what the capability is intended to allow on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe identifier of the permission referenced in this entry.\nIdentifier of the capability.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this capability should be active based on the …\nLoad the given capability file.\nWhether this capability is enabled for local app URLs or …\nList of permissions attached to this capability.\nLimit which target platforms this capability applies to.\nConfigure remote URLs that can use the capability …\nRemote domains this capability refers to using the …\nList of webviews that are affected by this capability. Can …\nList of windows that are affected by this capability. Can …\nThe list of capabilities.\nIdentifier of the permission or permission set.\nScope to append to the existing permission scope.\nIdentifier empty.\nIdentifier is too long.\nPlugin identifier.\nIdentifier is not in a valid format.\nIdentifier has multiple separators.\nErrors that can happen when parsing an identifier.\nIdentifier has a prefix without a base.\nIdentifier start with the plugin prefix.\nIdentifier has a trailing hyphen.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the identifier str.\nGet the identifier without prefix.\nGet the prefix of the identifier.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the identifier string and its separator.\nSet the identifier prefix.\nThe default permission set of the plugin.\nPlugin manifest.\nPermission file that can define a default permission, a …\nThe default permission set for the plugin\nDefault permission.\nHuman-readable description of what the permission does. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe global scope schema.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new manifest from the given plugin permission …\nA list of inlined permissions\nPlugin permission sets.\nAll permissions this set contains.\nPlugin permissions.\nA list of permissions sets defined\nThe version of the permission.\nResolved access control list.\nA resolved command permission.\nMetadata for what referenced a <code>ResolvedCommand</code>.\nA resolved scope. Merges all scopes defined for a single …\nA key for a scope, used to link a <code>ResolvedCommand</code> to the …\nAllows something on the command.\nThe commands that are allowed. Map each command with its …\nIdentifier of the capability.\nThe store of scopes referenced by a <code>ResolvedCommand</code>.\nThe execution context of this command.\nThe commands that are denied. Map each command with its …\nDenies something on the command.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe global scope.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIdentifier of the permission.\nThe capability/permission that referenced this command.\nResolves the ACL for the given plugin permissions and app …\nThe reference of the scope that is associated with this …\nThe list of webview label patterns that was resolved for …\nThe list of window label patterns that was resolved for …\nRepresents a <code>bool</code>.\nRepresents a <code>f64</code>.\nRepresents an <code>i64</code>.\nRepresents a list of other <code>Value</code>s.\nRepresents a map of <code>String</code> keys to <code>Value</code>s.\nRepresents a null JSON value.\nA valid ACL number.\nRepresents a valid ACL <code>Number</code>.\nRepresents a <code>String</code>.\nAll supported ACL values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresent an asset file path in a normalized way.\nAssets iterator.\nA Content-Security-Policy hash value for a specific …\n[<code>Assets</code>] implementation that only contains compile-time …\nThe <code>script-src</code> directive.\nThe <code>style-src</code> directive.\nCSP hashes for the given asset.\nThe Content-Security-Policy directive this hash applies to.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet an asset by key.\nThe value of the Content-Security-Policy hash.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate on the assets.\nCreates a new instance from the given asset map and script …\nBundle all targets.\nA list of paths that are allowed by this scope.\nGeneral configuration for the iOS target.\nThe path portion of an app URL. For instance, to load …\nThe macOS application bundle (.app).\nThe App configuration object.\nThe AppImage bundle (.appimage).\nConfiguration for AppImage bundles.\nConfig for the asset custom protocol.\nAn extension for a <code>FileAssociation</code>.\nDescribes the shell command to run before <code>tauri dev</code>.\nProduce updaters and their signatures or not\nCombines both modes and allows the user to choose at …\nBrownfield pattern.\nThe Build configuration object.\nConfiguration for tauri-bundler.\nDefinition for bundle resources. Can be either a list of …\nTargets to bundle. Each value is case insensitive.\nA bundle referenced by tauri-bundler.\nmacOS-only. Corresponds to CFBundleTypeRole\nBZIP2 usually gives better compression ratios than ZLIB, …\nA capability entry which can be either an inlined …\na tuple struct of RGBA colors. Each value has minimum of 0 …\nA string notation of the script to execute.\nAn object notation of the command.\nThe Tauri configuration object. It is read from a file …\nA Content-Security-Policy definition. See …\nA Content-Security-Policy directive source list. See …\nDefault mode for the installer.\nA custom protocol url, for example, <code>doom://index.html</code>\nCustom Signing Command configuration.\nThe debian bundle (.deb).\nConfiguration for Debian (.deb) bundles.\nDeep link protocol configuration.\nAn object mapping a directive with its sources values as a …\nPath to a directory containing the frontend dist assets.\nThe possible values for the …\nThe Apple Disk Image bundle (.dmg).\nConfiguration for Apple Disk Image (.dmg) bundles.\nDownload the bootstrapper and run it. Requires an internet …\nCFBundleTypeRole.Editor. Files can be read and edited.\nEmbed the bootstrapper and run it. Requires an internet …\nAn external URL. Must use either the <code>http</code> or <code>https</code> schemes.\nFile association\nAn array of files to embed on the app.\nEmbed a fixed webview2 version and use it at runtime. …\nIf <code>true</code>, disables all CSP modification. <code>false</code> is the …\nDefines the URL or assets to embed in the application.\nProtocol scope definition. It is a list of glob patterns …\nDescribes a shell command to be executed when a CLI hook …\nAn inline list of CSP sources. Same as <code>Self::List</code>, but …\nAn inlined capability.\nGeneral configuration for the iOS target.\nIsolation pattern. Recommended for security purposes.\nConfiguration for Linux bundles.\nA list of bundle targets.\nA list of languages to build, without configuration.\nA list of paths to include.\nA list of CSP sources. The collection will be concatenated …\nDisables the given list of CSP directives modifications.\nA map of languages and its configuration.\nLZMA (default) is a new compression method that gives very …\nConfiguration for the macOS bundles.\nA map of source to target paths.\nThe Microsoft Installer bundle (.msi).\nInstall Modes for the NSIS installer.\nDisable compression\nCFBundleTypeRole.None\nThe NSIS bundle (.exe).\nCompression algorithms used in the NSIS installer.\nConfiguration for the Installer bundle using NSIS.\nEmbed the offline installer and run it. Does not require …\nA single bundle target.\nA single language to build, without configuration.\nThe application pattern.\nInstall the app by default in the <code>Program Files</code> folder …\nThe plugin configs holds a HashMap mapping a plugin name …\nThe entire CSP policy in a single text string.\nPosition coordinates struct.\nCFBundleTypeRole.QLGenerator\nReference to a capability identifier.\nThe RPM bundle (.rpm).\nConfiguration for RPM bundles.\nA complete scope configuration.\nRun the given script with the default options.\nRun the given script with the default options.\nRun the given script with custom options.\nRun the given script with custom options.\nSecurity configuration.\nCFBundleTypeRole.Shell\nSize of the window.\nDo not install the Webview2 as part of the Windows …\nGenerates lagacy zipped v1 compatible updaters\nConfiguration for application tray icon.\nUpdater type\nAn external URL that should be used as the default …\nGenerates lagacy zipped v1 compatible updaters\nGenerates lagacy zipped v1 compatible updaters\nCFBundleTypeRole.Viewer. Files can be read.\nInstall modes for the Webview2 runtime. Note that for the …\nAn URL to open on a Tauri webview window.\nThe window configuration object.\nThe window effects configuration object\nWindows bundler configuration.\nConfiguration for the MSI bundle using WiX.\nThe languages to build using WiX.\nConfiguration for a target language for the WiX build.\nZLIB uses the deflate algorithm, it is a quick and simple …\nWhether clicking an inactive window also clicks through to …\nWhether Tauri should bundle your application or just …\nDefines additional browser arguments on Windows. By …\nReturns all Cargo features.\nValidates a second app installation, blocking the user …\nThe list of allowed paths.\nWhether the window should always be below other windows.\nWhether the window should always be on top of other …\nAndroid configuration.\nThe App configuration.\nPosition of app file on window.\nConfiguration for the AppImage bundle.\nPosition of application folder on window.\nCustom protocol config.\nImage to use as the background in dmg file. Accepted …\nPath to a bitmap file to use as the installation user …\nA shell command to run before <code>tauri build</code> kicks in.\nA shell command to run before the bundling phase in …\nA shell command to run before <code>tauri dev</code> kicks in.\nWhether browser extensions can be installed for the …\nThe build configuration.\nThe bundler configuration.\nInclude additional gstreamer dependencies needed for audio …\nDetermines whether the given CSP directive can be modified …\nList of capabilities that are enabled on the application.\nThe application kind.\nWhether or not the window starts centered or not.\nSpecifies the SHA1 hash of the signing certificate.\nPath of the uncompressed Changelog file, to be stored at …\nWhether the window’s native close button is enabled or …\nWindow effect color. Affects <code>WindowEffect::Blur</code> and …\nThe ComponentGroup element ids you want to reference from …\nThe Component element ids you want to reference from the …\nSet the compression algorithm used to compress files in …\nThe list of package conflicts.\nThe list of RPM dependencies your application conflicts …\nWhether the given source is configured on this directive …\nPrevents the window contents from being captured by other …\nA copyright string associated with your application.\nWhether Tauri should create this window at app startup or …\nProduce updaters and their signatures or not\nThe Content Security Policy that will be injected on all …\nA key-value pair where the key is the language and the …\nDisables the Tauri-injected CSP sources.\nConfiguration for the Debian bundle.\nWhether the window should have borders and bars.\nThe list of deb dependencies your application relies on.\nThe list of RPM dependencies your application relies on.\nThe association description. Windows-only. It is displayed …\nPath to a custom desktop file Handlebars template.\nPath to a custom desktop file Handlebars template.\nThe Content Security Policy that will be injected on all …\nThe URL to load in development.\nThe development team. This value is required for iOS …\nPath to a bitmap file to use on the installation user …\nSpecifies the file digest algorithm to use for creating …\nWhether to display a language selector dialog before the …\nDMG-specific settings.\nWhether the drag and drop is enabled or not on the …\nList of Window effects to apply to the Window. Conflicting …\nEnables the asset protocol.\nCreate an elevated update task within Windows Task …\nIf set to true “identifier” will be set as GTK app ID …\nPath to the entitlements file.\nThe RPM epoch.\nAllows your application to communicate with the outside …\nFile extensions to associate with this app. e.g. ‘png’\nExtends this CSP directive source list with the given …\nA list of—either absolute or relative—paths to …\nThe FeatureGroup element ids you want to reference from …\nThe Feature element ids you want to reference from the …\nReturns the enabled Cargo features.\nFeatures passed to <code>cargo</code> commands.\nFile associations to application.\nThe files to include in the Appimage Binary.\nThe files to include on the package.\nThe files to include on the package.\nThe files to include in the application relative to the …\nWhether the window will be initially focused or not.\nThe list of forbidden paths.\nA list of paths to .wxs files with WiX fragments to use.\nA list of strings indicating any macOS X frameworks that …\nA list of strings indicating any iOS frameworks that need …\nFreeze the <code>Object.prototype</code> when using the custom protocol.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe path to the application assets (usually the <code>dist</code> …\nWhether the window starts as fullscreen or not.\nWhether the codesign should enable hardened runtime (for …\nThe path to a bitmap file to display on the header of …\nHeight of the window.\nThe window height.\nIf <code>true</code>, sets the window title to be hidden on macOS.\nA url to the home page of your application. If unset, will …\nThe app’s icons\nA Boolean value that determines whether the image …\nPath to the default icon to use for the tray icon.\nSet an id for this tray icon so you can reference it …\nThe application identifier in reverse domain name notation …\nWhether or not the webview should be launched in incognito …\nWhether the installation will be for all users or just the …\nA path to a <code>.nsh</code> file that contains special NSIS macros to …\nThe path to an icon file used as the installer icon.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\niOS configuration.\nThe window identifier. It must be alphanumeric.\nThe installer languages to build. See …\nA list of installer languages. By default the OS language …\nThe package’s license identifier to be included in the …\nThe path to the license file to be included in the …\nConfiguration for the Linux bundles.\nThe path to a locale (<code>.wxl</code>) file. See …\nA longer, multi-line description of the application.\nConfiguration for the macOS bundles.\nMacOS private API configuration. Enables the transparent …\nApp main binary filename. Defaults to the name of your …\nThe max window height.\nThe max window width.\nWhether the window’s native maximize button is enabled …\nWhether the window is maximized or not.\nA Boolean value that determines whether the menu should …\nThe Merge element ids you want to reference from the …\nThe mime-type e.g. ‘image/png’ or ‘text/plain’. …\nThe min window height.\nThe minimum API level required for the application to run. …\nThe min window width.\nWhether the window’s native minimize button is enabled …\nA version string indicating the minimum macOS X version …\nA version string indicating the minimum iOS version that …\nTry to ensure that the WebView2 version is equal to or …\nThe name. Maps to <code>CFBundleTypeName</code> on macOS. Default to …\nThe protocol name. <strong>macOS-only</strong> and maps to <code>CFBundleTypeName</code>…\nConfiguration for the installer generated with NSIS.\nThe list of RPM dependencies your application supersedes - …\nSets the window associated with this label to be the …\nItems to help with parsing content into a <code>Config</code>.\nThe pattern to use.\nThe plugins config.\nPath to script that will be executed after the package is …\nPath to script that will be executed after the package is …\nPath to script that will be executed after the package is …\nPath to script that will be executed after the package is …\nPath to script that will be executed before the package is …\nPath to script that will be executed before the package is …\nPath to script that will be executed before the package is …\nPath to script that will be executed before the package is …\nChange the priority of the Debian Package. By default, it …\nApp name.\nProvider short name for notarization.\nThe list of dependencies the package provides.\nThe list of RPM dependencies your application provides.\nThe proxy URL for the WebView for all network requests.\nThe application’s publisher. Defaults to the second …\nAdds a path to the resource collection.\nAppends the given source to this directive.\nWindow effect corner radius <strong>macOS Only</strong>\nThe RPM release tag.\nThe list of package replaces.\nWhether the window is resizable or not. When resizable is …\nApp resources to bundle. Each resource is a path to a file …\nThe app’s role with respect to the type. Maps to …\nThe app’s role for these schemes. <strong>macOS-only</strong> and maps to …\nConfiguration for the RPM bundle.\nThe binary used to build and run the application.\nThe JSON schema for the Tauri config.\nURL schemes to associate with this app without <code>://</code>. For …\nThe access scope for the asset protocol.\nDefine the section in Debian Control file. See : …\nSecurity configuration.\nWhether or not the window has shadow.\nA short description of your application.\nThe path to a bitmap file for the Welcome page and the …\nSpecify a custom command to sign the binaries. This …\nIdentity to use for code signing.\nIf <code>true</code>, hides the window icon from the taskbar on Windows …\nSet the folder name for the start menu shortcut.\nWindow effect state <strong>macOS Only</strong>\nDefines the window tabbing identifier for macOS.\nThe bundle targets, currently supports [“deb”, “rpm…\nA custom .wxs template to use.\nA custom .nsi template to use.\nA custom XcodeGen project.yml template to use.\nThe initial window theme. Defaults to the system theme. …\nServer to use during timestamping.\nThe window title.\nTitle for MacOS tray\nThe style of the macOS title bar.\nGets the bundle targets as a <code>Vec</code>. The vector is empty when …\nTray icon tooltip on Windows and macOS\nWhether the window is transparent or not.\nConfiguration for app tray icon.\nWhether to use Time-Stamp Protocol (TSP, a.k.a. RFC 3161) …\nA GUID upgrade code for MSI installer. This code <strong><em>must stay </em></strong>…\nThe window webview URL.\nWhether to use the project’s <code>target</code> directory, for …\nThe user agent for the webview\nMSI installer version in the format <code>major.minor.patch.build</code>…\nApp version. It is a semver version number or a path to a …\nThe version code of the application. It is limited to …\nWhether the window is visible or not.\nWhether the window should be visible on all workspaces or …\nThe installation mode for the Webview2 runtime.\nWidth of the window.\nThe window width.\nWindow effects.\nPosition of volume window on screen.\nSize of volume window.\nConfiguration for the Windows bundles.\nThe app windows configuration.\nWhether we should inject the Tauri API on <code>window.__TAURI__</code> …\nConfiguration for the MSI generated with WiX.\nX coordinate.\nThe horizontal position of the window’s top left corner\nY coordinate.\nThe vertical position of the window’s top left corner\nWhether page zooming by hotkeys is enabled\nThe current working directory.\nThe script to execute.\nWhether <code>tauri dev</code> should wait for the command to finish or …\nThe arguments to pass to the command.\nThe command to run to sign the binary.\nA list of paths that are allowed by this scope.\nA list of paths that are not allowed by this scope. This …\nWhether or not paths that contain components that start …\nThe current working directory.\nThe script to execute.\nThe dir containing the index.html file that contains the …\nThe path to the fixed runtime to use.\nInstructs the installer to run the bootstrapper in silent …\nInstructs the installer to run the bootstrapper in silent …\nInstructs the installer to run the installer in silent …\nRepresents all the errors that can happen while reading …\nThe available configuration formats.\nKnown file extension encountered, but corresponding parser …\nAll configuration formats that are currently enabled.\nAll extensions that are possibly supported, but perhaps …\nFailed to parse from JSON.\nA generic IO error with context of what caused it.\nThe default JSON (tauri.conf.json) format.\nThe JSON5 (tauri.conf.json5) format.\nAll configuration formats that are possibly supported, but …\nThe TOML (Tauri.toml file) format.\nUnknown config file name encountered.\nCheck if a supported config file exists at path.\nDetermines if the given folder has a configuration file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaps the config format to its file name.\nDetermines if the given file path represents a Tauri …\nParse the config from path, including alternative formats.\n“Low-level” helper to parse JSON into a <code>Config</code>.\n“Low-level” helper to parse JSON into a JSON <code>Value</code>.\nSee <code>parse</code> for specifics, returns a JSON <code>Value</code> instead of …\nReads the configuration from the given root directory.\nReads the platform-specific configuration file from the …\nThe parsing <code>serde_json::Error</code>.\nThe <code>std::io::Error</code>.\nThe extension encountered.\nThe cargo feature to enable it.\nThe path that failed to parse into JSON.\nThe path the IO error occurred on.\nBrownfield pattern.\nIsolation pattern. Recommended for security purposes.\nWhere the JavaScript is injected to\nA strong reference to a node.\nOriginal frame, the Brownfield application\nThe shape of the JavaScript Pattern config\nThe token used for script nonces.\nThe token used for style nonces.\nSecure frame, the isolation security application\nReturn an iterator of references to this node’s …\nAppend a new child to this node, after existing children.\nReturn an iterator of references to this node’s children.\nReturn an iterator of references to this node’s …\nReturn an iterator of references to this node’s siblings …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn an iterator of references to this node and its …\nReturn an iterator of references to this node and its …\nReturn an iterator of references to this node and the …\nReturn an iterator of references to this node and the …\nInjects a content security policy to the HTML.\nInject nonce tokens to all scripts and styles.\nTemporary workaround for Windows not allowing requests\nInsert a new sibling after this node.\nInsert a new sibling before this node.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf this node is a comment, return a strong reference to …\nIf this node is a doctype, return a strong reference to …\nIf this node is a document, return a strong reference to …\nIf this node is an element, return a strong reference to …\nIf this node is a text node, return a strong reference to …\nCreate a new node.\nCreate a new comment node.\nCreate a new doctype node.\nCreate a new document node.\nCreate a new element node.\nCreate a new processing instruction node.\nCreate a new text node.\nParses the given HTML string.\nReturn an iterator of references to this node’s siblings …\nPrepend a new child to this node, before existing children.\nReturn an iterator of the inclusive descendants element …\nReturn the first inclusive descendants element that match …\nSerialize this node and its descendants in HTML syntax to …\nSerializes the node to HTML.\nSerialize this node and its descendants in HTML syntax to …\nReturn the concatenation of all text nodes in this subtree.\nReturn an iterator of the start and end edges of this …\nReturn an iterator of the start and end edges of this node …\nWhich <code>IsolationSide</code> this <code>PatternObject</code> is getting injected …\nRead all bytes until a newline (the <code>0xA</code> byte) or a …\nWeb Compatible MimeTypes\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ninfer mimetype from content (or) URI if needed.\nparse a URI suffix to convert text/plain mimeType to their …\nparse a URI suffix to convert text/plain mimeType to their …\ninfer mimetype from content (or) URI if needed with …\nAndroid.\niOS.\nLinux.\nMacOS.\nPlatform target.\nWindows.\nGets the current build target.\nRetrieves the currently running binary’s path, taking …\nReturns the argument unchanged.\nParses the target from the given target triple.\nCalls <code>U::from(self)</code>.\nWhether the target is desktop or not.\nWhether the target is mobile or not.\nComputes the resource directory of the current environment.\nTry to determine the current target triple.\nInformation for a resource.\nA helper to iterate through resources.\nIterator of a <code>ResourcePaths</code>.\nParses the external binaries to bundle, adding the target …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new ResourcePaths from a slice of patterns to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the resource iterator that yields the source and …\nCreates a new ResourcePaths from a slice of patterns to …\nThe path of the resource.\nGiven a path (absolute or relative) to a resource file, …\nThe target location of the resource.")