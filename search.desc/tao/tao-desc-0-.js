searchState.loadedDescShard("tao", 0, "Tao is a cross-platform application window creation and …\nThe <code>Error</code> struct and associated types.\nThe <code>Event</code> enum and assorted supporting types.\nThe <code>EventLoop</code> struct and assorted supporting types, …\n<strong>UNSTABLE</strong> – Types related to the keyboard.\nTypes useful for interacting with a user’s monitors.\nContains traits with platform-specific methods in them.\nThe <code>Window</code> struct and associated types.\nAn error whose cause it outside Tao’s control.\nThe operation is not supported by the backend.\nThe error type for when the requested operation is not …\nThe OS cannot perform the operation.\nThe error type for when the OS cannot perform the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIdentifier for a specific analog axis on some device.\nMotion on some analog axis. May report data redundant to …\nIdentifier for a specific button on some device.\nOn iOS, the force is calibrated so that the same number …\nThe window has been requested to close.\nThe cursor has entered the window.\nThe cursor has left the window.\nThe cursor has moved on the window.\nThe window decorations has been clicked.\nThe window has been destroyed.\nRepresents raw hardware events that are not associated …\nEmitted when the OS sends an event to a device.\nIdentifier of an input device.\nA file has been dropped into the window.\nDescribes the input state of a key.\nDescribes a generic event.\nThe window gained or lost focus.\nDescribes the force of a touch event\nA file is being hovered over the window.\nA file was hovered, but has exited the window.\nSent once, immediately after <code>run</code> is called. Indicates that …\nDescribes a keyboard input targeting a window.\nAn event from the keyboard has been received.\nAmount in lines or rows to scroll in the horizontal and …\nEmitted when the event loop is being shut down.\nEmitted when all of the event loop’s input events have …\nThe keyboard modifiers have changed.\nMotion on some analog axis.  This event will be reported …\nDescribes a button of a mouse controller.\nAn mouse button press has been received.\nChange in physical position of a pointing device.\nDescribes a difference in the mouse scroll wheel state.\nA mouse wheel movement or touchpad scroll occurred.\nPhysical scroll event\nThe position of the window has changed. Contains the window…\nEmitted when new events arrive from the OS to be processed.\nIf the platform reports the force as normalized, we have …\nEmitted when the app is open by external resources, like …\nAmount in pixels to scroll in the horizontal and vertical …\nSent if the event loop is being resumed after the loop’s …\nDescribes a keyboard input as a raw device event.\nThe window received a unicode character.\nEmitted after all <code>RedrawRequested</code> events have been …\nEmitted after <code>MainEventsCleared</code> when a window should be …\nPlatform-specific\nThe size of the window has changed. Contains the client …\nSent if the time specified by <code>ControlFlow::WaitUntil</code> has …\nEmitted when the application has been resumed.\nThe window’s scale factor has changed.\nDescribes the reason the event loop is resuming.\nEmitted when the application has been suspended.\nThe system window theme has changed.\nRepresents a touch event\nTouch event has been received\nDescribes touch-screen input state.\nTouchpad pressure event.\nEmitted when an event is sent from …\nSent if the OS has new events to send to the window, after …\nDescribes an event from a <code>Window</code>.\nEmitted when the OS sends an event to a tao window.\nSafety\nDescribes how hard the screen was pressed. May be <code>None</code> if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique identifier of a finger.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis value ignores all modifiers including, but not …\nThis value is affected by all modifiers except Ctrl.\nReturns the force normalized to the range between 0.0 and …\nRepresents the position of a key independent of the …\nContains the text produced by this keypress.\nIdentical to <code>KeyEvent::text</code> but this is affected by Ctrl.\nIf the event doesn’t contain a reference, turn it into …\n(x, y) change in position in unspecified units.\nThe altitude (in radians) of the stylus.\nThe force of the touch, where a value of 1.0 represents …\nThe maximum possible force for a touch.\nIf <code>true</code>, the event was generated synthetically by tao in …\n(x,y) coords in pixels relative to the top-left corner of …\nAlways filter out device events.\nSet by the user callback given to the <code>EventLoop::run</code> …\nFiter controlling the propagation of device events.\nProvides a way to retrieve events from the system and from …\nObject that allows building the event loop.\nThe error that is returned when an <code>EventLoopProxy</code> attempts …\nUsed to send custom events to <code>EventLoop</code>.\nTarget that associates windows with an <code>EventLoop</code>.\nAlias for <code>ExitWithCode</code><code>(0)</code>.\nSend a <code>LoopDestroyed</code> event and stop the event loop. This …\nReport all device events regardless of window focus.\nWhen the current loop iteration finishes, immediately …\nFilter out device events while the window is not focused.\nWhen the current loop iteration finishes, suspend the …\nWhen the current loop iteration finishes, suspend the …\nReturns the list of all the monitors available on the …\nBuilds a new event loop.\nCreates an <code>EventLoopProxy</code> that can be used to dispatch …\nReturns the current cursor position\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the monitor that contains the given point.\nAlias for <code>EventLoopBuilder::new().build()</code>.\nStart building a new event loop.\nReturns the primary monitor of the system.\nHijacks the calling thread and initializes the tao event …\nSend an event to the <code>EventLoop</code> from which this proxy was …\nChange <code>DeviceEvent</code> filter mode.\nSets the progress bar state\nSets the theme for the application.\nStart building a new event loop, with the given type as …\nThe “alt” key.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitate the multi-candidate mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nThis is the android “key code” of the event as …\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe “control” key.\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Rrecorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nKey represents the meaning of a keypress.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nRepresents the code of a physical key.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nRepresents the location of a physical key.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nRepresents the current state of the keyboard modifiers\nContains the platform-native physical key identifier (aka …\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nOn the Mac, this is used for the numpad Clear key.\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nPage Down, PgDn, or ⇟\nScroll down or display next page of content.\nPage Up, PgUp, or ⇞\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nFound on Sun’s USB keyboard.\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause Break\nPause the current state or application (as appropriate).\n. on a US keyboard.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nShift+= on a US keyboard.\nThis key is placed in the function section on some Apple …\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nPrtScr SysRq or Print Screen\nInitiate print-screen function.\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe Roman characters function key.\nThe “shift” key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nThis is the “windows” key on PC and “command” key …\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nToggle between scrolling and cursor movement modes.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Symbol modifier key (used on some virtual keyboards).\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nTab or ⇥\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nFound on Sun’s USB keyboard.\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nThis variant is used when the key cannot be translated to …\nThis variant is used when the key cannot be translated to …\nAdvance video mode to next available mode. (…\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nCause device to identify itself in some manner, e.g., …\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between full-screen and scaled content, or alter …\nGet a flags value with all known bits set.\nReturns <code>true</code> if the alt key is pressed.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns <code>true</code> if the control key is pressed.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nReturn <code>KeyCode</code> from platform scancode.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns <code>true</code> if the shift key is pressed.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReturns <code>true</code> if the super key is pressed.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturn platform specific scancode.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nHandle to a monitor.\nDescribes a fullscreen video mode of a monitor.\nReturns the bit depth of this video mode, as in how many …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the monitor that this video mode is valid for. …\nReturns a human-readable name of the monitor.\nReturns the top-left corner position of the monitor …\nReturns the refresh rate of this video mode. <strong>Note</strong>: the …\nReturns the scale factor that can be used to map logical …\nReturns the resolution of this video mode.\nReturns the monitor’s resolution.\nReturns all fullscreen video modes supported by this …\nCorresponds to <code>NSApplicationActivationPolicyAccessory</code>.\nCorresponds to <code>NSApplicationActivationPolicy</code>.\nAdditional methods on <code>EventLoopWindowTarget</code> that are …\nAdditional methods on <code>MonitorHandle</code> that are specific to …\nCorresponds to <code>NSApplicationActivationPolicyProhibited</code>.\nCorresponds to <code>NSApplicationActivationPolicyRegular</code>.\nAdditional methods on <code>WindowBuilder</code> that are specific to …\nAdditional methods on <code>Window</code> that are specific to MacOS.\nReturns whether the system can automatically organize …\nReturns the argument unchanged.\nReturns whether or not the window has shadow.\nHide the entire application. In most applications this is …\nHide the other applications. In most applications this is …\nCalls <code>U::from(self)</code>.\nGet the window’s edit state\nReturns the identifier of the monitor for Cocoa.\nReturns a pointer to the NSScreen representing this …\nReturns a pointer to the cocoa <code>NSView</code> that is used by this …\nReturns a pointer to the cocoa <code>NSWindow</code> that is used by …\nUsed to prevent the application from automatically …\nSets the activation policy for the application. It is set …\nSets the activation policy for the application. It is set …\nSets whether the system can automatically organize windows …\nThe content view consumes the full size of the window.\nSets whether or not the window has shadow.\nPut the window in a state which indicates a file save is …\nToggles a fullscreen mode that doesn’t require a new …\nGroup windows together by using the same tabbing …\nA Boolean value that indicates whether the title bar draws …\nSet the window traffic light position relative to the …\nShow the entire application.\nReturns whether or not the window is in simple fullscreen …\nReturns the window’s tabbing identifier.\nSets whether the system can automatically organize windows …\nMakes the window content appear behind the titlebar.\nSets whether or not the window has shadow.\nEnables click-and-drag behavior for the entire window, not …\nSets a parent to the window to be created.\nBuild window with <code>resizeIncrements</code> property. Values must …\nDefines the window tabbing identifier.\nHides the window title.\nHides the window titlebar buttons.\nHides the window titlebar.\nMakes the titlebar transparent and allows the content to …\nSets the traffic light position to (x, y) relative to the …\nAdditional methods on <code>EventLoop</code> to return control flow to …\nA type provided by the user that can be passed through …\nInitializes the <code>tao</code> event loop.\nSelf explanatory.\nAn error produced when using <code>Icon::from_rgba</code> with invalid …\nProviding <code>None</code> to <code>Borderless</code> will fullscreen on the …\nProduced when the length of the <code>rgba</code> argument isn’t …\nPlatform-specific\nA simple crosshair.\nDescribes the appearance of the mouse cursor.\nThe platform-dependent default cursor.\nProduced when the provided icon width or height is equal …\nProduced when the number of pixels (<code>rgba.len() / 4</code>) isn’…\nProduced when the provided icon width or height is equal …\nIndicate that some edge is to be moved. For example, the …\n<strong>Treated as Normal in linux</strong>\nFullscreen modes.\nIndicates something can be grabbed.\nIndicates something is grabbed.\nA hand (often used to indicate links in web browsers).\nHelp indicator (often rendered as a “?”)\nAn icon used for the window titlebar, taskbar, etc.\n<strong>Treated as Normal in linux and macOS</strong>\nPlatform-specific\nIndicates something is to be moved.\nCursor showing that something cannot be done.\nProduced when underlying OS functionality failed to create …\n<strong>Treated as Normal in linux</strong>\nProgress indicator. Shows that processing is being done. …\nProgress State\nDefines the orientation that a window resize will be …\nIndicates text that may be selected or edited.\nProgram busy indicator.\nRepresents a window.\nAttributes to use when creating a window.\nObject that allows you to build windows.\nIdentifier of a window. Unique for each window.\nWindow size constraints\nWhether the window should always be on bottom of other …\nWhether the window should always be on top of other …\nReturns the list of all the monitors available on the …\nBuilds the window.\nClamps the desired size based on the constraints set\nWhether the window is closable or not.\nPrevents the window contents from being captured by other …\nReturns the monitor on which the window currently resides.\nReturns the current cursor position\nWhether the window should have borders and bars.\nThe <code>.desktop</code> filename with the Unity desktop window …\nResizes the window with the left mouse button until the …\nMoves the window with the left mouse button until the …\nSafety\nWhether the window should be initially focused or not.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an <code>Icon</code> from 32bpp RGBA data.\nGets the window’s current fullscreen state.\nWhether the window should be set as fullscreen upon …\nReturns true if <code>max_width</code> or <code>max_height</code> is set.\nReturns true if <code>min_width</code> or <code>min_height</code> is set.\nReturns an identifier unique to the window.\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the window’s client area.\nThe dimensions of the window. If this is <code>None</code>, some …\nThe window size constraints\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates whether the window is always on top of other …\nGets the window’s current closable state.\nGets the window’s current decoration state.\nIs window active and focused?\nGets the window’s current maximizable state.\nGets the window’s current maximized state.\nGets the window’s current minimizable state.\nGets the window’s current minimized state.\nGets the window’s current resizable state.\nGets the window’s current visibility state.\nThe maximum height a window can be, If this is <code>None</code>, the …\nReturns a logical size that represents the maximum …\nReturns a physical size that represents the maximum …\nThe maximum width a window can be, If this is <code>None</code>, the …\nWhether the window is maximizable or not.\nWhether the window should be maximized upon creation.\nThe minimum height a window can be, If this is <code>None</code>, the …\nReturns a logical size that represents the minimum …\nReturns a physical size that represents the minimum …\nThe minimum width a window can be, If this is <code>None</code>, the …\nWhether the window is minimizable or not.\nReturns the monitor that contains the given point.\nCreates a new Window for platforms where this is …\nInitializes a new <code>WindowBuilder</code> with default values.\nReturns the position of the top-left hand corner of the …\nReturns the physical size of the entire window.\nThe desired position of the window. If this is <code>None</code>, some …\nReturns the primary monitor of the system.\nThe progress bar progress. This can be a value ranging …\nEmits a <code>WindowEvent::RedrawRequested</code> event in the …\nRequests user attention to the window, this has no effect …\nWhether the window is resizable or not.\nReturns the scale factor that can be used to map logical …\nChange whether or not the window will always be below …\nChange whether or not the window will always be on top of …\nSets whether the window is closable or not.\nPrevents the window contents from being captured by other …\nGrabs the cursor, preventing it from leaving the window.\nModifies the cursor icon of the window.\nChanges the position of the cursor in window coordinates.\nModifies the cursor’s visibility.\nTurn window decorations on or off.\nBring the window to front and focus.\nSets the window to fullscreen or back.\nModifies whether the window catches cursor events.\nSets location of IME candidate box in client area …\nModifies the inner size of the window.\nSets inner size constraints for the window.\nSets a maximum dimension size for the window.\nSets whether the window is maximizable or not.\nSets the window to maximized or back.\nSets a minimum dimension size for the window.\nSets whether the window is minimizable or not.\nSets the window to minimized or back\nModifies the position of the window.\nSets the taskbar progress state.\nSets whether the window is resizable or not.\nSets the theme for this window.\nModifies the title of the window.\nModifies the window’s visibility.\nSets whether the window should be visible on all …\nSets the window icon. On Windows and Linux, this is …\nThe progress bar state.\nReturns the current window theme.\nGets the current title of the window.\nThe title of the window in the title bar.\nWhether the the window should be transparent. If this is …\nWhether the window should be immediately visible upon …\nSets whether the window should be visible on all …\nThe attributes to use to create the window.\nThe window icon.\nSets whether or not the window will always be below other …\nSets whether or not the window will always be on top of …\nSets whether the window is closable or not.\nPrevents the window contents from being captured by other …\nSets whether the window should have a border, a title bar, …\nWhether the window will be initially focused or not.\nSets the window fullscreen state.\nRequests the window to be of specific dimensions.\nSets inner size constraints for the window.\nSets a maximum dimension size for the window.\nSets whether the window is maximizable or not.\nRequests maximized mode.\nSets a minimum dimension size for the window.\nSets whether the window is minimizable or not.\nSets a desired initial position for the window.\nSets whether the window is resizable or not.\nForces a theme or uses the system settings if <code>None</code> was …\nRequests a specific title for the window.\nSets whether the background of the window should be …\nSets whether the window will be initially hidden or …\nSets whether the window should be visible on all …\nSets the window icon.")